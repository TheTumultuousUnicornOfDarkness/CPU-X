name: AppImage Versioned

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release"
        required: true

env:
  BUILD_TYPE: Release

jobs:
  linux-appimage-versioned-build:
    name: Linux ${{ matrix.os.arch }} (Versioned build)
    runs-on: ${{ matrix.os.label }}
    strategy:
      matrix:
        os:
          # x86_64 (https://github.com/actions/runner-images/tree/main/images/ubuntu)
          - { arch: x86_64, label: ubuntu-22.04 }
          # ARM64 (https://github.com/actions/partner-runner-images)
          - { arch: aarch64, label: ubuntu-22.04-arm }

    steps:
    - uses: actions/checkout@v4

    - uses: abbbi/github-actions-tune@v1

    - name: Set environment variables
      run: |
        TAG="${MANUAL_TAG:-$GITHUB_REF_NAME}"
        echo "Using tag '${TAG}'"
        echo "VERSION=${TAG/v/}" >> $GITHUB_ENV
        echo "CHANGELOG_TAG=${TAG//./}---$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      env:
        MANUAL_TAG: ${{ inputs.version }}

    - name: Build libcpuid
      run: bash -x ./scripts/build_libcpuid.sh "$BUILD_TYPE"

    - name: Build CPU-X
      run: bash -x ./scripts/build_cpu_x.sh "$BUILD_TYPE" "$GITHUB_WORKSPACE" "$GITHUB_WORKSPACE/AppDir"

    - name: Package CPU-X as an AppImage
      run: |
        bash -x ./scripts/build_appimage.sh "$GITHUB_WORKSPACE" "$GITHUB_WORKSPACE/AppDir"
        ls -l AppImage/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.os.arch }}
        path: AppImage/CPU-X-*


  linux-appimage-versioned-release:
    name: Linux (Versioned release)
    needs: linux-appimage-versioned-build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: AppImage/
        merge-multiple: true

    - name: Display structure of downloaded files
      run: ls -R AppImage/

    - name: Create versioned release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: false
        artifacts: "AppImage/CPU-X-*.AppImage*"
        body: |
          **Version ${{ env.VERSION }}.**

          [ChangeLog](https://github.com/TheTumultuousUnicornOfDarkness/CPU-X/blob/master/ChangeLog.md#${{ env.CHANGELOG_TAG }})

          ## Packages

          Search the `cpu-x` package in your repositories or [CPU-X on Flathub](https://flathub.org/fr/apps/io.github.thetumultuousunicornofdarkness.cpu-x).

          ## Binary

          - **AppImage (ARM64)**: CPU-X-${{ env.VERSION }}-aarch64.AppImage
          - **AppImage (x86_64)**: CPU-X-${{ env.VERSION }}-x86_64.AppImage

          *Note: a Polkit Authentication agent is mandatory to start daemon from GUI.*

          ## Notes

          ### To packagers
          -

          ### To users
          -
        commit: ${{ github.sha }}
        draft: true
        name: ${{ github.ref_name }}
        prerelease: false
        replacesArtifacts: true
        skipIfReleaseExists: true
        tag: ${{ github.ref_name }}
        token: "${{ secrets.GITHUB_TOKEN }}"
